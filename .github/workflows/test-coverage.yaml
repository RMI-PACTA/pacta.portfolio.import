# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

name: test-coverage

jobs:
  test-coverage:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v3

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::covr
          needs: coverage

      - name: test-coverage
        id: coverage
        run: |
          markdown <- function(x, group = c("filename", "functions"), by = "line", ...) {
            if (length(x) == 0) {
              return(invisible(x))
            }
            group <- match.arg(group)

            df <- covr::tally_coverage(x, by = by)

            if (!NROW(df)) {
              return(invisible(x))
            }

            percents <- tapply(df$value, df[[group]], FUN = function(x) (sum(x > 0) / length(x)) * 100)

            overall_percentage <- covr::percent_coverage(df, by = by)

            paste0("|file|percents|\n|----|----|\n",
              paste0("|Overall|", format(overall_percentage, digits = 4), "%|\n"),
              paste0("|", names(percents), "|", format(percents, digits = 4), "%|", collapse = "\n"), "\n")
          }
          system(paste0('echo "', markdown(covr::package_coverage()), '" >> $GITHUB_STEP_SUMMARY'))
          system(paste0('echo "coverage-report=', markdown(covr::package_coverage()), '" >> $GITHUB_OUTPUT'))
        shell: Rscript {0}
      
      - name: Find Comment
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: coverage

      - name: Create or update comment
        uses: peter-evans/create-or-update-comment@v2
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            coverage
            ${{ steps.coverage.outputs.coverage-report }}
          edit-mode: replace

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find ${{ runner.temp }}/package -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package
